# HG changeset patch
# User malayaleecoder <malayaleecoder@gmail.com>
# Date 1455310948 -19800
#      Sat Feb 13 02:32:28 2016 +0530
# Branch Bug1219323
# Node ID cbfd9e4eeed50ca482a8bcf730a01511e448cc81
# Parent  1c86c16eac9fa343ac22e8c7f8313104ea9f5d49
Bug 1219323 - Remove unnecessary table created check from BrowserDatabaseHelper

diff --git a/mobile/android/base/java/org/mozilla/gecko/db/BrowserDatabaseHelper.java b/mobile/android/base/java/org/mozilla/gecko/db/BrowserDatabaseHelper.java
--- a/mobile/android/base/java/org/mozilla/gecko/db/BrowserDatabaseHelper.java
+++ b/mobile/android/base/java/org/mozilla/gecko/db/BrowserDatabaseHelper.java
@@ -183,17 +183,16 @@ final class BrowserDatabaseHelper extend
         db.execSQL("CREATE TABLE " + TABLE_CLIENTS + "(" +
                 BrowserContract.Clients.GUID + " TEXT PRIMARY KEY," +
                 BrowserContract.Clients.NAME + " TEXT," +
                 BrowserContract.Clients.LAST_MODIFIED + " INTEGER," +
                 BrowserContract.Clients.DEVICE_TYPE + " TEXT" +
                 ");");
     }
 
-    private boolean didCreateTabsTable = false;
     private void createTabsTable(SQLiteDatabase db, final String tableName) {
         debug("Creating tabs.db: " + db.getPath());
         debug("Creating " + tableName + " table");
 
         // Table for each tab on any client.
         db.execSQL("CREATE TABLE " + tableName + "(" +
                 BrowserContract.Tabs._ID + " INTEGER PRIMARY KEY AUTOINCREMENT," +
                 BrowserContract.Tabs.CLIENT_GUID + " TEXT," +
@@ -335,17 +334,16 @@ final class BrowserDatabaseHelper extend
 
         createBookmarksTable(db);
         createHistoryTable(db);
         createFaviconsTable(db);
         createThumbnailsTable(db);
         createClientsTable(db);
         createLocalClient(db);
         createTabsTable(db, TABLE_TABS);
-        didCreateTabsTable = true;
         createTabsTableIndices(db, TABLE_TABS);
 
 
         createBookmarksWithFaviconsView(db);
         createHistoryWithFaviconsView(db);
         createCombinedViewOn19(db);
 
         createOrUpdateSpecialFolder(db, Bookmarks.PLACES_FOLDER_GUID,
@@ -362,17 +360,16 @@ final class BrowserDatabaseHelper extend
      * Copies the tabs and clients tables out of the given tabs.db file and into the destinationDB.
      *
      * @param tabsDBFile Path to existing tabs.db.
      * @param destinationDB The destination database.
      */
     public void copyTabsDB(File tabsDBFile, SQLiteDatabase destinationDB) {
         createClientsTable(destinationDB);
         createTabsTable(destinationDB, TABLE_TABS);
-        didCreateTabsTable = true;
         createTabsTableIndices(destinationDB, TABLE_TABS);
 
         SQLiteDatabase oldTabsDB = null;
         try {
             oldTabsDB = SQLiteDatabase.openDatabase(tabsDBFile.getPath(), null, SQLiteDatabase.OPEN_READONLY);
 
             if (!DBUtils.copyTable(oldTabsDB, TABLE_CLIENTS, destinationDB, TABLE_CLIENTS)) {
                 Log.e(LOGTAG, "Failed to migrate table clients; ignoring.");
@@ -984,21 +981,16 @@ final class BrowserDatabaseHelper extend
                 FileUtils.delete(file);
             } catch (Exception e) {
                 Log.e(LOGTAG, "Exception occurred while trying to delete " + file.getPath() + "; ignoring.", e);
             }
         }
     }
 
     private void upgradeDatabaseFrom24to25(SQLiteDatabase db) {
-        if (didCreateTabsTable) {
-            debug("No need to rev tabs schema; foreign key constraint exists.");
-            return;
-        }
-
         debug("Rewriting tabs table.");
         createTabsTable(db, "tmp_tabs");
 
         // Remove indexes. We don't need them now, and we'll be throwing away the table.
         db.execSQL("DROP INDEX IF EXISTS " + TabsProvider.INDEX_TABS_GUID);
         db.execSQL("DROP INDEX IF EXISTS " + TabsProvider.INDEX_TABS_POSITION);
 
         db.execSQL("INSERT INTO tmp_tabs (" +
@@ -1015,17 +1007,16 @@ final class BrowserDatabaseHelper extend
                         "SELECT " +
                         "_id, client_guid, title, url, history, favicon, last_used, position" +
                         " FROM " + TABLE_TABS);
 
         // Now switch these tables over and recreate the indices.
         db.execSQL("DROP TABLE " + TABLE_TABS);
         db.execSQL("ALTER TABLE tmp_tabs RENAME TO " + TABLE_TABS);
         createTabsTableIndices(db, TABLE_TABS);
-        didCreateTabsTable =true;
     }
 
     private void upgradeDatabaseFrom25to26(SQLiteDatabase db) {
         debug("Dropping unnecessary indices");
         db.execSQL("DROP INDEX IF EXISTS clients_guid_index");
         db.execSQL("DROP INDEX IF EXISTS thumbnails_url_index");
         db.execSQL("DROP INDEX IF EXISTS favicons_url_index");
     }
diff --git a/mobile/android/base/java/org/mozilla/gecko/db/TabsProvider.java b/mobile/android/base/java/org/mozilla/gecko/db/TabsProvider.java
--- a/mobile/android/base/java/org/mozilla/gecko/db/TabsProvider.java
+++ b/mobile/android/base/java/org/mozilla/gecko/db/TabsProvider.java
@@ -162,17 +162,16 @@ public class TabsProvider extends Shared
             case CLIENTS_ID:
                 trace("Delete on CLIENTS_ID: " + uri);
                 selection = DBUtils.concatenateWhere(selection, selectColumn(TABLE_CLIENTS, Clients._ID));
                 selectionArgs = DBUtils.appendSelectionArgs(selectionArgs,
                         new String[] { Long.toString(ContentUris.parseId(uri)) });
                 // fall through
             case CLIENTS:
                 trace("Delete on CLIENTS: " + uri);
-                // Delete from both TABLE_TABS and TABLE_CLIENTS.
                 deleted = deleteValues(uri, selection, selectionArgs, TABLE_CLIENTS);
                 break;
 
             case TABS_ID:
                 trace("Delete on TABS_ID: " + uri);
                 selection = DBUtils.concatenateWhere(selection, selectColumn(TABLE_TABS, Tabs._ID));
                 selectionArgs = DBUtils.appendSelectionArgs(selectionArgs,
                         new String[] { Long.toString(ContentUris.parseId(uri)) });
